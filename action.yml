name: 'DefectDojo Import scan'
description: >
    Import scan result into DefectDojo
inputs:
  token:
    description: > 
        (string($date)) The personal access token used to access the API.
    required: true
  defectdojo_url:
    description: > 
        (string) The DefectDojo base url. Example: https://defectdojo.domain.com
    required: true
  defectdojo_endpoint:
    description: >
        (string) The DefectDojo import-scan endpoint. Default: /api/v2/import-scan/
    default: '/api/v2/import-scan/'
  scan_date:
    description: >
        (string) The Default value: yyyy-mm-dd ( Current date )
    default: ''
  scan_time:
    description: >
        (string) The Default value: HH:MM:SS ( Current time )
    default: ''
  minimum_severity:
    description: > 
        (string) Available values : Info, Low, Medium, High, Critical. Default value: Info
    default: 'Info'
  active:
    description: > 
        (boolean) Boolean. Default value: true
    default: true
  verified:
    description: > 
        (boolean) Boolean. Default value: true
    default: true
  scan_type:
    description: > 
        (string) Scan type in the format Trufflehog Scan_YYYY-MM-DD_HH:MM:SS.   
    required: true
  endpoint_to_add:
    description: > 
        (integer) Endpoint id.
    default: ''
  file:
    description: > 
        (string) File path.
    required: true
  engagement:
    description: > 
        (number) Engagement id.
    required: true
  lead:
    description: > 
        (integer) Lead id.
    default: ''
  tags:
    description: > 
        (array[string]) Tag array.
    default: ''
  close_old_findings:
    description: > 
        (boolean) Boolean. Default value: false.
    default: false
  push_to_jira:
    description: > 
        (boolean) Boolean. Default value: false.
    default: false
  environment:
    description: > 
        (string) Environment name.
    default: ''
  version:
    description: > 
        (string) Project version.
    default: ''
  build_id:
    description: > 
        (string) Build id.
    default: ''
  branch_tag:
    description: > 
        (string) Branch tag.
    default: ''
  commit_hash:
    description: > 
        (string) Commit hash.
    default: ''
  sonarqube_config:
    description: > 
        (integer) Sonarqube config id.
    default: ''
  cobaltio_config:
    description: > 
        (integer) Cobaltio config id.
    default: ''
  group_by:
    description: > 
        (string) Choose an option to automatically group new findings by the chosen option. Available values: component_name, component_name+component_version, file_path. Default value: component_name+component_version
    default: 'component_name+component_version'
outputs:
  response:
    description: 'DefectDojo publish result'
    value: ${{ steps.import.outputs.response }}
runs:
  using: 'composite'
  steps:
    - id: import
      run: |
        ${{ github.action_path }}/entrypoint.sh
      shell: bash
      env:
        INPUT_TOKEN: ${{ inputs.token }}
        INPUT_DEFECTDOJO_URL: ${{ inputs.defectdojo_url }}
        INPUT_DEFECTDOJO_ENDPOINT: ${{ inputs.defectdojo_endpoint }}
        INPUT_SCAN_DATE: ${{ inputs.scan_date }}
        INPUT_SCAN_TIME: ${{ inputs.scan_time }}
        INPUT_MINIMUM_SEVERITY: ${{ inputs.minimum_severity }}
        INPUT_ACTIVE: ${{ inputs.active }}
        INPUT_VERIFIED: ${{ inputs.verified }}
        INPUT_SCAN_TYPE: ${{ inputs.scan_type }}
        INPUT_ENDPOINT_TO_ADD: ${{ inputs.endpoint_to_add }}
        INPUT_FILE: ${{ github.workspace}}/${{ inputs.file }}
        INPUT_ENGAGEMENT: ${{ inputs.engagement }}
        INPUT_LEAD: ${{ inputs.lead }}
        INPUT_TAGS: ${{ inputs.tags }}
        INPUT_CLOSE_OLD_FINDINGS: ${{ inputs.close_old_findings }}
        INPUT_PUSH_TO_JIRA: ${{ inputs.push_to_jira }}
        INPUT_ENVIRONMENT: ${{ inputs.environment }}
        INPUT_VERSION: ${{ inputs.version }}
        INPUT_BUILD_ID: ${{ inputs.build_id }}
        INPUT_BRANCH_TAG: ${{ inputs.branch_tag }}
        INPUT_COMMIT_HASH: ${{ inputs.commit_hash }}
        INPUT_SONARQUBE_CONFIG: ${{ inputs.sonarqube_config }}
        INPUT_COBALTIO_CONFIG: ${{ inputs.cobaltio_config }}
        INPUT_GROUP_BY: ${{ inputs.group_by }}

branding:
  icon: 'target'
  color: 'gray-dark'
